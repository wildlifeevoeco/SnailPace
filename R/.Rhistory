library(Matrix, lib.loc = "C:/Program Files/R/R-3.6.1/library")
install.packages("raster")
library(raster)
library(Rcpp)
library(readxl)
CombinedSnailsExcel <- read_excel("Honours stuff/CombinedSnailsExcel.xlsx",
col_types = c("numeric", "text", "numeric",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "numeric",
"text"))
View(CombinedSnailsExcel)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Honours stuff/Snails/Enclosure_raster.R', echo=TRUE)
library(readxl)
SnailDataUTM <- read_excel("Honours stuff/Snails/SnailDataUTM.xlsx",
col_types = c("numeric", "text", "numeric",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"))
View(SnailDataUTM)
proximity(SnailDataUTM, values = NULL, units = 1, in_meters = FALSE,
filename = NULL)
install.packages("proximity")
install.packages("proximity")
##TREATMENT 1
# Load raster package
library(raster)
# Set projection
# TODO: switch this to your proj4string
proj <- '+proj=utm +zone=22 ellps=WGS84'
# Generate empty raster
extent <-
r <- raster(ncol = 65, nrow = 65,
ymn = 5268492, ymx = 5268557,
xmn = 370194, xmx =  370259,
crs = CRS(proj), resolution = 1)
# Fill all cells with 0 (grass)
r[] <- 0
# Brick cells
xbrick1 <- seq(370239, 370259 , by = 1)
ybrick1 <- seq(5268547, 5268557, by = 1)
# Expand the two sequence of x, y to all combinations and cast as matrix
xybrick1 <- as.matrix(expand.grid(xbrick, ybrick))
cells <- cellFromXY(r, xybrick1)
r1[cells] <- 1
## Plotting options
# base r
plot(r1)
# raster package
spplot(r1)
# Load raster package
library(raster)
# Set projection
# TODO: switch this to your proj4string
proj <- '+proj=utm +zone=22 ellps=WGS84'
# Generate empty raster
extent <-
r <- raster(ncol = 65, nrow = 65,
ymn = 5268492, ymx = 5268557,
xmn = 370194, xmx =  370259,
crs = CRS(proj), resolution = 1)
# Fill all cells with 0 (grass)
r[] <- 0
# Brick cells
xbrick1 <- seq(370239, 370259 , by = 1)
ybrick1 <- seq(5268547, 5268557, by = 1)
# Expand the two sequence of x, y to all combinations and cast as matrix
xybrick1 <- as.matrix(expand.grid(xbrick, ybrick))
cells <- cellFromXY(r, xybrick1)
r[cells] <- 1
## Plotting options
# base r
plot(r1)
## Plotting options
# base r
plot(r)
# Expand the two sequence of x, y to all combinations and cast as matrix
xybrick1 <- as.matrix(expand.grid(xbrick1, ybrick1))
cells <- cellFromXY(r, xybrick1)
r[cells] <- 1
## Plotting options
# base r
plot(r)
##TREATMENT 1
# Load raster package
library(raster)
# Set projection
# TODO: switch this to your proj4string
proj <- '+proj=utm +zone=22 ellps=WGS84'
# Generate empty raster
extent <-
r1 <- raster(ncol = 65, nrow = 65,
ymn = 5268492, ymx = 5268557,
xmn = 370194, xmx =  370259,
crs = CRS(proj), resolution = 1)
# Fill all cells with 0 (grass)
r1[] <- 0
# Brick cells
xbrick1 <- seq(370239, 370259 , by = 1)
ybrick1 <- seq(5268547, 5268557, by = 1)
# Expand the two sequence of x, y to all combinations and cast as matrix
xybrick1 <- as.matrix(expand.grid(xbrick1, ybrick1))
cells <- cellFromXY(r1, xybrick1)
r1[cells] <- 1
## Plotting options
# base r
plot(r1)
# raster package
spplot(r1)
source('~/Honours stuff/Snails/Enclosure_raster.R', echo=TRUE)
source('~/Honours stuff/Snails/Enclosure_raster.R', echo=TRUE)
library(readxl)
SnailDataUTM <- read_excel("Honours stuff/Snails/SnailDataUTM.xlsx",
col_types = c("numeric", "text", "numeric",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"))
View(SnailDataUTM)
read(SnailDataUTM$Treatment=1)
read(SnailDataUTM$Treatment="1")
read(SnailDataUTM$Treatment)
SnailDataUTM$Treatment
SnailDataUTM$Treatment=1
SnailDataUTM$Treatment=1
library(readxl)
SnailDataUTM <- read_excel("Honours stuff/Snails/SnailDataUTM.xlsx",
col_types = c("numeric", "text", "numeric",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"))
View(SnailDataUTM)
source('~/Honours stuff/Snails/Enclosure_raster.R', echo=TRUE)
library(readxl)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx")
View(UTMTreat1)
source('~/Honours stuff/Snails/Enclosure_raster.R', echo=TRUE)
library(readxl)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx")
View(UTMTreat1)
x1 <- UTMTreat1$xUTM
y1 <- UTMTreat1$yUTM
x1new<- na.omit(x1)
y1new<- na.omit(y1)
# Create a point layer
xy1 <- matrix(c(xnew, ynew), nrow=4327, ncol =2)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=4327, ncol =2)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2858, ncol =2)
p1 <- SpatialPoints(xy1)
r.d <- distanceFromPoints(p1, xybrick1)
plot(r.d)
View(p1)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2858, ncol =1)
p1 <- SpatialPoints(xy1)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2858, ncol =4)
p1 <- SpatialPoints(xy1)
r.d <- distanceFromPoints(p1, xybrick1)
plot(r.d)
View(p1)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2858, ncol =2858)
p1 <- SpatialPoints(xy1)
r.d <- distanceFromPoints(p1, xybrick1)
plot(r.d)
plot(p1)
View(xy1)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2858, ncol =2)
View(xy1)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2, ncol =2858)
View(xy1)
x1 <- UTMTreat1$xUTM
y1 <- UTMTreat1$yUTM
x1new<- na.omit(x1)
y1new<- na.omit(y1)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2, ncol =2858)
p1 <- SpatialPoints(xy1)
r.d <- distanceFromPoints(p1, xybrick1)
plot(r.d)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=65, ncol =65)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=6858, byrow = T)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2858, byrow = T)
p1 <- SpatialPoints(xy1)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2858, ncol = 2, byrow = T)
p1 <- SpatialPoints(xy1)
r.d <- distanceFromPoints(p1, xybrick1)
plot(r.d)
r.d <- distanceFromPoints(xybrick1, p1)
r.d <- distanceFromPoints(r1, p1)
plot(r.d)
plot(p1)
r.d <- distanceFromPoints(r1, xy1)
plot(r.d)
plot(p1)
plot(xy1)
View(UTMTreat1)
SpatialPoints(xy1, proj4string=CRS(as.character(NA)))
p1 <- SpatialPoints(xy1, proj4string=CRS(as.character(NA)))
p1
r.d <- distanceFromPoints(r1, xy1)
plot(r.d)
plot(xy1)
writeRaster(r.d, "proxraster")
write.csv(p1, "pointsdata.csv")
brick <-rasterize(xybrick, r, field=1)
plot(p1)
spplot(p1)
# Create a point layer
xy1 <- matrix(c(x1new, y1new), nrow=2, ncol = 2, byrow = T)
p1 <- SpatialPoints(xy1)
p1 <- SpatialPoints(xy1, proj4string=CRS(as.character(NA)))
r.d <- distanceFromPoints(r1, xy1)
plot(r.d)
spplot(p1)
# Create a point layer
xy1 <-c(x1new, y1new)
p1 <- SpatialPoints(xy1)
xy1 <- UTMTreat1[,c(10,11)]
p1 <- SpatialPointsDataFrame(coords = xy1, data = UTMTreat1,
proj4string = CRS("+proj=utm +zone=22 ellps=WGS84"))
UTMTreat1 <- na.omit(UTMTreat1)
xy1 <- UTMTreat1[,c(10,11)]
p1 <- SpatialPointsDataFrame(coords = xy1, data = UTMTreat1,
proj4string = CRS("+proj=utm +zone=22 ellps=WGS84"))
View(UTMTreat1)
library(readxl)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx")
View(UTMTreat1)
source('~/Honours stuff/Snails/Enclosure_raster.R', echo=TRUE)
UTMTreat1 <- read_csv("UTMTreat1.csv", col_names = TRUE)
install.packages("read.csv")
UTMTreat1 <-read_csv("UTMTreat1.csv", col_names = TRUE)
install.packages("tidyverse")
library(spatial, lib.loc = "C:/Program Files/R/R-3.6.2/library")
library(tidyverse)
UTMTreat1 <-read_csv("UTMTreat1.csv", col_names = TRUE)
UTMTreat1 <-write.csv("UTMTreat1.csv", col_names = TRUE)
UTMTreat1 <-write.csv("UTMTreat1.csv")
library(readxl)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx",
na = "omit")
View(UTMTreat1)
warnings()
library(readxl)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx",
col_types = c("numeric", "text", "numeric",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"), na = "omit")
View(UTMTreat1)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx",
col_types = c("numeric", "text", "numeric",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"), na.omit(c(10,11)))
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx",
col_types = c("numeric", "text", "numeric",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"), na.omit(c(10,11)))
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx",
col_types = c("numeric", "text", "numeric",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"))
library(readxl)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx")
View(UTMTreat1)
Treat1 <- na.omit(c(UTMTreat1$xUTM,UTMTreat1$yUTM))
xy1 <-Treat1[,c(10,11)]
view(Treat1)
Treat1 <- na.omit(c(UTMTreat1$xUTM,UTMTreat1$yUTM), ncol=2)
xy1 <-Treat1[,c(10,11)]
view(Treat1)
Treat1 <- drop_na(UTMTreat1)
view(Treat1)
View(UTMTreat1)
library(readxl)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx")
View(UTMTreat1)
Treat1 <- drop_na(UTMTreat1)
view(Treat1)
xy1 <-Treat1[,c(10,11)]
p1 <- SpatialPointsDataFrame(coords = xy1, data = Treat1,
proj4string = CRS("+proj=utm +zone=22 ellps=WGS84"))
plot(r.d)
r.d <- distanceFromPoints(r1, p1)
plot(r.d)
## Plotting options
# base r
plot(r1)
source('~/Honours stuff/Snails/Enclosure_raster.R', echo=TRUE)
library(readxl)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx")
View(UTMTreat1)
spplot(p1)
writeRaster(r.d, "proxraster")
spplot(p1)
library(readxl)
UTMTreat1 <- read_excel("Honours stuff/Snails/UTMTreat1.xlsx")
View(UTMTreat1)
##Drop rows with NA values
Treat1 <- drop_na(UTMTreat1)
view(Treat1)
##Create spatial points
xy1 <-Treat1[,c(10,11)]
p1 <- SpatialPointsDataFrame(coords = xy1, data = Treat1,
proj4string = CRS("+proj=utm +zone=22 ellps=WGS84"))
##Calculate distance from points
r.d <- distanceFromPoints(r1, p1)
plot(r.d)
spplot(p1)
spplot(p1)
plot(p1)
writeRaster(r.d, "proxraster")
writeRaster(r.d, "proxraster_treat1")
write.csv(p1, "pointsdata_treat1.csv")
read.raster(r.d)
View(r.d)
r.d@data@values
write.csv(r.d@data@values, "proxraster1.csv")
setwd("~/Honours stuff/Snails")
write.csv(r.d@data@values, "proxraster1.csv")
r.d <- distanceFromPoints(p1, r1)
xybrick_r <- Rasterize(xybrick1)
install.packages("rasterize")
library(rasterize)
xybrick_r <- Rasterize(xybrick1)
xybrick_r <- rasterize(xybrick1)
detach("package:rasterize", unload = TRUE)
library(RQGIS)
xybrick_r <- Rasterize(xybrick1)
xybrick_r <- raster(xybrick1)
xybrick_r1 <- raster(xybrick1)
r.d <- distanceFromPoints(xybrick_r1, p1)
plot(r.d)
r.d <- distanceFromPoints(xybrick_r1, p1)
plot(r.d)
r.d <- distanceFromPoints(xybrick_r1, p1,proj4string = CRS("+proj=utm +zone=22 ellps=WGS84"))
plot(r.d)
p1 <- SpatialPointsDataFrame(coords = xy1, data = Treat1,
proj4string = CRS("+proj=utm +zone=22 ellps=WGS84"))
##Calculate distance from points
r.d <- distanceFromPoints(r1, p1)
plot(p1)
plot(r.d)
spplot(r.d)
library(rasterVis)
levelplot(r.d)
plot(p1)
help(spplot)
spplot(r.d, col.regions = rainbow(99, start=.1))
plot(r.d, col.regions = rainbow(99, start=.1))
help(plot)
plot(r.d, col=heat.colors)
plot(r.d)
distance(r1,r.d)
dist <- distance(r1,r.d)
plot(dist)
dist <- distance(r1)
plot(dist)
)
UTMTreat2 <- read_excel("Honours stuff/Snails/UTMTreat2.xlsx")
View(UTMTreat2)
plot(dist)
write.csv(dist, "dist.csv")
)
